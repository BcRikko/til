---
import type { Page, GetStaticPaths } from "astro";

import Layout from "../layouts/Layout.astro";

const title = "Today I learned.";
const description = "日々学んだことを公開するサイトです。";
const tags = ["frontend", "web", "javascript", "html", "css"];

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const allPosts = await Astro.glob("../pages/posts/**/*.{md,mdx}");

  const sortedPosts = allPosts.sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).getTime() -
      new Date(a.frontmatter.pubDate).getTime(),
  );

  return paginate(sortedPosts, {
    pageSize: 20,
  });
};

const { page } = Astro.props as { page: Page };
---

<Layout title={title} description={description} tags={tags.join(", ")}>
  <h1>Today I learned.</h1>
  <p>日々学んだことを公開するサイトです。</p>
  <ul>
    {
      page.data.map((post) => (
        <li>
          <time>{post.frontmatter.pubDate}</time>:{" "}
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>

  <nav class="pagination" aria-label="ページネーション">
    <ul>
      {
        page.url.prev && (
          <li>
            <a href={`/til${page.url.prev}`} aria-label="前のページに移動する">
              ≪ 前へ
            </a>
          </li>
        )
      }
      {
        page.url.next && (
          <li>
            <a href={`/til${page.url.next}`} aria-label="次のページに移動する">
              次へ ≫
            </a>
          </li>
        )
      }
    </ul>
  </nav>
</Layout>

<style>
  .pagination ul {
    display: flex;
    justify-content: center;
    gap: 2rem;
    list-style-type: none;
  }
</style>
